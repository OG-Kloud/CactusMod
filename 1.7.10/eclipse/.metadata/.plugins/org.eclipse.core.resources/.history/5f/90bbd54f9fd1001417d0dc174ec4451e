package net.kloudspace.cactus.entity.renderers;

import net.kloudspace.cactus.block.blocks.KBlocks;
import net.kloudspace.cactus.entity.EntityCactusTNT;
import net.kloudspace.cactus.utils.Reference;
import net.minecraft.client.renderer.RenderBlocks;
import net.minecraft.client.renderer.entity.Render;
import net.minecraft.entity.Entity;
import net.minecraft.util.ResourceLocation;

import org.lwjgl.opengl.GL11;

public class RenderCactusTNT extends Render {
	
	private static final ResourceLocation TEXTURE = new ResourceLocation(Reference.MODID + ":" +"textures/blocks/cactustnt");
	private RenderBlocks blockRenderer = new RenderBlocks();
	
	public RenderCactusTNT()
    {
		Reference.logger.info("TNT Renderer Called");
        this.shadowSize = 0.5F;
    }
	@Override
    protected void bindEntityTexture(Entity p_110777_1_)
    {
        this.bindTexture(this.getEntityTexture(p_110777_1_));
    }
	
	public void doRender(EntityCactusTNT entity, double d, double d1, double d2, float f, float f1) {
		GL11.glPushMatrix();
        GL11.glTranslatef((float)d, (float)d1, (float)d2);
        float f2;

        if ((float)entity.fuse - f1 + 1.0F < 10.0F)
        {
            f2 = 1.0F - ((float)entity.fuse - f1 + 1.0F) / 10.0F;

            if (f2 < 0.0F)
            {
                f2 = 0.0F;
            }

            if (f2 > 1.0F)
            {
                f2 = 1.0F;
            }

            f2 *= f2;
            f2 *= f2;
            float f3 = 1.0F + f2 * 0.3F;
            GL11.glScalef(f3, f3, f3);
        }

        f2 = (1.0F - ((float)entity.fuse - f1 + 1.0F) / 100.0F) * 0.8F;
        this.bindEntityTexture(entity);
        this.blockRenderer.renderBlockAsItem(KBlocks.cactusTNT, 0, entity.getBrightness(f1));

        if (entity.fuse / 5 % 2 == 0)
        {
            GL11.glDisable(GL11.GL_TEXTURE_2D);
            GL11.glDisable(GL11.GL_LIGHTING);
            GL11.glEnable(GL11.GL_BLEND);
            GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_DST_ALPHA);
            GL11.glColor4f(1.0F, 1.0F, 1.0F, f2);
            this.blockRenderer.renderBlockAsItem(KBlocks.cactusTNT, 0, 1.0F);
            GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
            GL11.glDisable(GL11.GL_BLEND);
            GL11.glEnable(GL11.GL_LIGHTING);
            GL11.glEnable(GL11.GL_TEXTURE_2D);
        }

        GL11.glPopMatrix();
	}
	
	@Override
	public void doRender(Entity p_76986_1_, double p_76986_2_, double p_76986_4_, double p_76986_6_, float p_76986_8_, float p_76986_9_) {
		this.doRender((EntityCactusTNT)p_76986_1_, p_76986_2_, p_76986_4_, p_76986_6_, p_76986_8_, p_76986_9_);
    }

	@Override
	protected ResourceLocation getEntityTexture(Entity p_110775_1_) {
		return TEXTURE;
	}

}
