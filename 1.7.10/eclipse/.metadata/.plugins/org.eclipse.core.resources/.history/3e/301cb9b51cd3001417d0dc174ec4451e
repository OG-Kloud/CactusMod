package net.kloudspace.cactus.block.containers;

import java.util.Random;

import net.kloudspace.cactus.Cactus;
import net.kloudspace.cactus.block.blocks.KBlocks;
import net.kloudspace.cactus.utils.Reference;
import net.minecraft.block.BlockContainer;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.IIcon;
import net.minecraft.world.World;
import cpw.mods.fml.common.network.internal.FMLNetworkHandler;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

public class FurnaceContainer extends BlockContainer {
	
	private final Random random = new Random();
	
	private boolean isActive;
	
	private static boolean keep;
	
    @SideOnly(Side.CLIENT)
    private IIcon front;
    @SideOnly(Side.CLIENT)
    private IIcon side;
    @Override
    @SideOnly(Side.CLIENT)
    public void registerBlockIcons(IIconRegister p_149651_1_)
    {
        this.blockIcon = p_149651_1_.registerIcon(Reference.folder +"cactusbrick");
        this.front = p_149651_1_.registerIcon(this.isActive ? Reference.folder+"furnace_front_on" : Reference.folder+"furnace_front_off");
        this.side = p_149651_1_.registerIcon(Reference.folder+"cactusbrick");
    }
    @Override
    @SideOnly(Side.CLIENT)
    public IIcon getIcon(int p_149691_1_, int p_149691_2_)
    {
        return p_149691_1_ == 1 ? this.front : (p_149691_1_ == 0 ? this.front : (p_149691_1_ != p_149691_2_ ? this.blockIcon : this.side));
    }
    @Override
    public void onBlockAdded(World p_149726_1_, int p_149726_2_, int p_149726_3_, int p_149726_4_)
    {
        super.onBlockAdded(p_149726_1_, p_149726_2_, p_149726_3_, p_149726_4_);
        this.setDefaultDirection(p_149726_1_, p_149726_2_, p_149726_3_, p_149726_4_);
    }
    private void setDefaultDirection(World par1World, int par2, int par3, int par4)
	{
		if (!par1World.isRemote)
		{
			
			byte b0 = 3;

			par1World.setBlockMetadataWithNotify(par2, par3, par4, b0, 2);
		}
	}
    public boolean onBlockActivated(World world, int x, int y, int z, EntityPlayer player, int side, float hitX, float hitY, float hitZ) {
		if(!world.isRemote) {
			FMLNetworkHandler.openGui(player, Cactus.instance, Reference.cacFurnId, world, x, y, z);
		}
		
		return true;
	}
    public static void updateFurnaceBlockState(boolean par0, World par1World, int par2, int par3, int par4)
	{
		int l = par1World.getBlockMetadata(par2, par3, par4);
		TileEntity tileentity = par1World.getTileEntity(par2, par3, par4);
		keep = true;

		if (par0)
		{
			par1World.setBlock(par2, par3, par4, KBlocks.cactusFurnace_lit);
		}
		else
		{
			par1World.setBlock(par2, par3, par4, KBlocks.cactusFurnace);
		}

		keep = false;
		par1World.setBlockMetadataWithNotify(par2, par3, par4, l, 2);

		if (tileentity != null)
		{
			tileentity.validate();
			par1World.setTileEntity(par2, par3, par4, tileentity);
		}
	}


}
